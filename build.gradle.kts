/*
 * This file was partially generated by the Gradle 'init' task.
 */

import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar
import org.ajoberstar.grgit.Grgit
import java.time.LocalDateTime

group = "science.atlarge.opencraft"
version = "1.1.4-SNAPSHOT"
description = "Opencraft"
java.sourceCompatibility = JavaVersion.VERSION_1_8

plugins {
    java
    application
    `maven-publish`
    //////////////////// Plugins added manually ////////////////////
    // code quality
    checkstyle
    // Used for creating a "fat" jar
    id("com.github.johnrengelman.shadow") version "7.1.2"
    // generate Lombok code
    id("io.freefair.lombok") version "6.5.1"
    // jacoco coverage reporting
    jacoco
    // Able to read git info to put into MANIFEST.MF
    id("org.ajoberstar.grgit") version "4.1.1"
    // Sonarqube code analysis
    id("org.sonarqube") version "3.4.0.2513"
    // Publish Azure Function via Gradle
    id("com.microsoft.azure.azurefunctions") version "1.11.0"
}

publishing {
    publications.create<MavenPublication>("maven") {
        from(components["java"])
    }
}

tasks {
    withType<JavaCompile>() {
        options.encoding = "UTF-8"
    }
    // Add meta data to manifest
    // Read via: $ unzip -q -c build/libs/opencraft-<YOUR_VERSION_HERE>-SNAPSHOT-all.jar META-INF/MANIFEST.MF
    withType(Jar::class) {
        val repo = Grgit.open(mapOf("currentDir" to project.rootDir))
        manifest {
            attributes["Implementation-Title"] = project.name
            attributes["Implementation-Version"] = project.version
            attributes["Implementation-Timestamp"] = LocalDateTime.now()
            attributes["Git-Commit"] = repo.head().getAbbreviatedId(8)
            attributes["Git-Branch"] = repo.branch.getCurrent().getName()
            attributes["Built-By"] = System.getProperty("user.name")
        }
    }
    named<Test>("test") {
        useJUnitPlatform()
    }
    named<ShadowJar>("shadowJar") {
        archiveBaseName.set("opencraft")
        archiveClassifier.set("")
        archiveVersion.set("")
    }
}

application {
    mainClass.set("science.atlarge.opencraft.opencraft.Main")
}

checkstyle {
    config = resources.text.fromFile("etc/checkstyle.xml")
    toolVersion = "8.45.1"
    isShowViolations = true
    isIgnoreFailures = true
}

azurefunctions {
    resourceGroup = "opencraft-rg"
    appName = "opencraft-linux-function"
    region = "Germany West Central"
    setRuntime(closureOf<com.microsoft.azure.gradle.configuration.GradleRuntimeConfig> {
        os("Linux")
        javaVersion("8")
    })
    setAuth(closureOf<com.microsoft.azure.gradle.auth.GradleAuthConfig> {
        type = "azure_cli"
    })
    // enable local debug
    // localDebug = "transport=dt_socket,server=y,suspend=n,address=5005"
    setDeployment(closureOf<com.microsoft.azure.plugin.functions.gradle.configuration.deploy.Deployment> {
        type = "run_from_blob"
    })
}

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url = uri("https://opencraft-vm.labs.vu.nl/nexus/repository/opencraft-group/")
    }
}

dependencies {
    implementation("science.atlarge.opencraft:dyconits:1.0.8")
    implementation("org.slf4j:slf4j-jdk14:1.7.6")
    implementation("science.atlarge.opencraft:messaging-system:1.2")
    implementation("com.google.guava:guava:21.0")
    implementation("com.atlarge:yscollector:0.2")
    implementation("net.glowstone:glowkit:1.12.2-R5.0-SNAPSHOT")
    implementation("org.fusesource.jansi:jansi:1.18")
    implementation("jline:jline:2.14.6")
    implementation("it.unimi.dsi:fastutil:8.3.1")
    implementation("com.flowpowered:flow-network:1.2.8-20200223.162006-1")
    implementation("com.eatthepath:fast-uuid:0.1")
    implementation("org.jetbrains:annotations:19.0.0")
    implementation("org.jogamp.gluegen:gluegen-rt-main:2.3.2")
    implementation("org.jogamp.jocl:jocl-main:2.3.2")
    implementation("com.tobedevoured.naether:core:0.15.6")
    implementation("org.apache.maven:maven-artifact:3.6.3")
    // Serverless libraries
    implementation("com.microsoft.azure.functions:azure-functions-java-library:1.4.0")
    implementation("com.azure:azure-storage-blob:12.12.0")
    implementation("com.microsoft.sqlserver:mssql-jdbc:9.2.1.jre8")
    implementation("io.netty:netty-handler:4.1.65.Final")
    implementation("com.amazonaws:aws-lambda-java-core:1.2.0")
    implementation("com.amazonaws:aws-java-sdk-lambda:1.11.779")
    implementation("com.google.code.gson:gson:2.8.6")
    testImplementation("org.junit.platform:junit-platform-launcher:1.6.2")
    testImplementation("junit:junit:4.13.1")
    testImplementation("org.junit.vintage:junit-vintage-engine:5.8.2")
    testImplementation("org.junit.jupiter:junit-jupiter-api:5.8.2")
    testImplementation("org.junit.jupiter:junit-jupiter-params:5.8.2")
    testImplementation("org.junit.jupiter:junit-jupiter-engine:5.8.2")
    testImplementation("org.hamcrest:hamcrest:2.1")
    testImplementation("org.powermock:powermock-core:2.0.7")
    testImplementation("org.powermock:powermock-module-junit4:2.0.7")
    testImplementation("org.powermock:powermock-api-mockito2:2.0.7")
}
